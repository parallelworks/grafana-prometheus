
services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.retention.time=15d
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./data/prometheus:/prometheus
    ports:
      - "9090:9090"
    networks: [monitoring]

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    # NOTE: This scrapes container metrics by default. For full host metrics, consider host PID/FS mounts + host network.
    # No host port publish
    networks: [monitoring]

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    depends_on: [prometheus]
    environment:
      GF_SECURITY_ADMIN_USER: "${GF_SECURITY_ADMIN_USER:-admin}"
      GF_SECURITY_ADMIN_PASSWORD: "${GF_SECURITY_ADMIN_PASSWORD:-admin}"

      PUBLIC_BASE_URL: "${PUBLIC_BASE_URL:-https://activate.parallel.works}"
      GRAFANA_SUBPATH: "${GRAFANA_SUBPATH:-__BASE_PATH__}"
      GF_SERVER_ROOT_URL: "${PUBLIC_BASE_URL}${GRAFANA_SUBPATH}"
      GF_SERVER_SERVE_FROM_SUB_PATH: "true"
      GF_SERVER_ENFORCE_DOMAIN: "false"

      # Anonymous auth (you currently set Admin â€” be careful!)
      GF_AUTH_ANONYMOUS_ENABLED: "${GF_AUTH_ANONYMOUS_ENABLED:-true}"
      GF_AUTH_ANONYMOUS_ORG_NAME: "${GF_AUTH_ANONYMOUS_ORG_NAME:-Main Org.}"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "${GF_AUTH_ANONYMOUS_ORG_ROLE:-Admin}"
      GF_AUTH_DISABLE_LOGIN_FORM: "${GF_AUTH_DISABLE_LOGIN_FORM:-false}"

      GF_SECURITY_COOKIE_SAMESITE: "lax"
      GF_SECURITY_COOKIE_SECURE: "false"
      GF_SECURITY_FORCE_HTTPS: "false"

      # Theme
      GF_USERS_DEFAULT_THEME: "${GF_USERS_DEFAULT_THEME:-light}"
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./data/grafana:/var/lib/grafana
    networks: [monitoring]

  nginx:
    image: nginx:alpine
    container_name: grafana-proxy
    depends_on: [grafana]
    restart: unless-stopped
    ports:
      - "8080:8080"   # only public entrypoint
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks: [monitoring]

networks:
  monitoring:
    driver: bridge